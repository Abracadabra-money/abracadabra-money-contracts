name: Foundry

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  FOUNDRY_PROFILE: ci
  MAINNET_RPC_URL: ${{ secrets.MAINNET_RPC_URL }}
  OPTIMISM_RPC_URL: ${{ secrets.OPTIMISM_RPC_URL }}
  BSC_RPC_URL: ${{ secrets.BSC_RPC_URL }}
  FANTOM_RPC_URL: ${{ secrets.FANTOM_RPC_URL }}
  ARBITRUM_RPC_URL: ${{ secrets.ARBITRUM_RPC_URL }}
  POLYGON_RPC_URL: ${{ secrets.POLYGON_RPC_URL }}
  AVALANCHE_RPC_URL: ${{ secrets.AVALANCHE_RPC_URL }}
  MOONRIVER_RPC_URL: https://moonriver.public.blastapi.io
  KAVA_RPC_URL: ${{ secrets.KAVA_RPC_URL }}
  LINEA_RPC_URL: ${{ secrets.LINEA_RPC_URL }}
  BASE_RPC_URL: ${{ secrets.BASE_RPC_URL }}
  BLAST_RPC_URL: ${{ secrets.BLAST_RPC_URL }}
  BERA_RPC_URL: https://bartio.rpc.berachain.com

jobs:
  check:
    strategy:
      fail-fast: true

    name: Foundry project
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      # Cache .foundry/cache directory
      - name: Cache Foundry
        uses: actions/cache@v2
        with:
          path: ~/.foundry/cache
          key: ${{ runner.os }}-foundry-${{ hashFiles('**/lockfile') }}

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Use Bun
        uses: oven-sh/setup-bun@v2

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install Halmos
        run: pip install halmos

      - name: Check Bun version
        run: bun --version

      - name: Install Bun dependencies
        run: bun install --ignore-scripts

      - name: Install Solidity dependencies
        run: forge soldeer install

      - name: Typecheck
        run: bun typecheck

      - name: Run Forge build
        run: |
          forge --version
          mv test test.bk && mv script script.bk && forge build --sizes && mv test.bk test && mv script.bk script
          mv test/fuzzing src/
          forge build
        id: build

      - name: Run Forge tests
        run: forge test -vv
        id: test

      - name: Run Halmos symbolic tests
        run: halmos
