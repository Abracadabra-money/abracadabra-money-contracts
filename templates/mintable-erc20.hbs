// SPDX-License-Identifier: MIT
pragma solidity >=0.8.0;

import {ERC20} from "@solady/tokens/ERC20.sol";
import {OwnableOperators} from "/mixins/OwnableOperators.sol";
import {IMintableBurnable} from "/interfaces/IMintableBurnable.sol";

contract {{contractName}} is ERC20, OwnableOperators, IMintableBurnable {
    constructor(address _owner) {
        _initializeOwner(_owner);
    }

    function name() public pure override returns (string memory) {
        return "{{name}}";
    }

    function symbol() public pure override returns (string memory) {
        return "{{symbol}}";
    }

    function decimals() public pure override returns (uint8) {
        return {{decimals}};
    }

    function burn(address from, uint256 amount) external onlyOperators returns (bool) {
        _burn(from, amount);
        return true;
    }

    function mint(address to, uint256 amount) external onlyOperators returns (bool) {
        _mint(to, amount);
        return true;
    }
}
