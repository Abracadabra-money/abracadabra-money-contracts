{
  "address": "0x2901C6bA004AD7E1e69620D3911Df144Ad4A6563",
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "_desc",
          "type": "string",
          "internalType": "string"
        },
        {
          "name": "_aggregator",
          "type": "address",
          "internalType": "contract IAggregator"
        },
        {
          "name": "_upscaledTargetDecimals",
          "type": "uint8",
          "internalType": "uint8"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "aggregator",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IAggregator"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "decimalScale",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "decimals",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint8",
          "internalType": "uint8"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "get",
      "inputs": [
        {
          "name": "",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        },
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "name",
      "inputs": [
        {
          "name": "",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "peek",
      "inputs": [
        {
          "name": "",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        },
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "peekSpot",
      "inputs": [
        {
          "name": "data",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "rate",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "symbol",
      "inputs": [
        {
          "name": "",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "view"
    }
  ],
  "bytecode": "0x60e060405234801561000f575f80fd5b5060405161098038038061098083398101604081905261002e91610163565b6001600160a01b0382166080525f61004684826102cc565b505f826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610084573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906100a89190610386565b90508060ff168260ff16116100d2576100c28160026103ba565b6100cd90600a6104c2565b6100fc565b6100dc81836104d0565b6100e78360026103ba565b6100f191906104d0565b6100fc90600a6104c2565b60a05260ff808216908316116101125780610114565b815b60ff1660c052506104e992505050565b634e487b7160e01b5f52604160045260245ffd5b80516001600160a01b038116811461014e575f80fd5b919050565b805160ff8116811461014e575f80fd5b5f805f60608486031215610175575f80fd5b83516001600160401b0381111561018a575f80fd5b8401601f8101861361019a575f80fd5b80516001600160401b038111156101b3576101b3610124565b604051601f8201601f19908116603f011681016001600160401b03811182821017156101e1576101e1610124565b6040528181528282016020018810156101f8575f80fd5b5f5b82811015610216576020818501810151838301820152016101fa565b505f6020838301015280955050505061023160208501610138565b915061023f60408501610153565b90509250925092565b600181811c9082168061025c57607f821691505b60208210810361027a57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156102c757805f5260205f20601f840160051c810160208510156102a55750805b601f840160051c820191505b818110156102c4575f81556001016102b1565b50505b505050565b81516001600160401b038111156102e5576102e5610124565b6102f9816102f38454610248565b84610280565b6020601f82116001811461032b575f83156103145750848201515b5f19600385901b1c1916600184901b1784556102c4565b5f84815260208120601f198516915b8281101561035a578785015182556020948501946001909201910161033a565b508482101561037757868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b5f60208284031215610396575f80fd5b61039f82610153565b9392505050565b634e487b7160e01b5f52601160045260245ffd5b60ff81811683821602908116908181146103d6576103d66103a6565b5092915050565b6001815b6001841115610418578085048111156103fc576103fc6103a6565b600184161561040a57908102905b60019390931c9280026103e1565b935093915050565b5f8261042e575060016104bc565b8161043a57505f6104bc565b8160018114610450576002811461045a57610476565b60019150506104bc565b60ff84111561046b5761046b6103a6565b50506001821b6104bc565b5060208310610133831016604e8410600b8410161715610499575081810a6104bc565b6104a55f1984846103dd565b805f19048211156104b8576104b86103a6565b0290505b92915050565b5f61039f60ff841683610420565b60ff82811682821603908111156104bc576104bc6103a6565b60805160a05160c05161046161051f5f395f60d201525f818161010b01526102db01525f8181608e015261025701526104615ff3fe608060405234801561000f575f80fd5b5060043610610085575f3560e01c8063d39bbef011610058578063d39bbef01461015b578063d568866c1461013b578063d6d7d5251461016e578063eeb8a8d31461016e575f80fd5b8063245a7bfc14610089578063313ce567146100cd578063c4f5183b14610106578063c699c4d61461013b575b5f80fd5b6100b07f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f47f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016100c4565b61012d7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016100c4565b61014e610149366004610304565b610198565b6040516100c49190610372565b61012d610169366004610304565b61022a565b61018161017c366004610304565b61023d565b6040805192151583526020830191909152016100c4565b60605f80546101a6906103bd565b80601f01602080910402602001604051908101604052809291908181526020018280546101d2906103bd565b801561021d5780601f106101f45761010080835404028352916020019161021d565b820191905f5260205f20905b81548152906001019060200180831161020057829003601f168201915b5050505050905092915050565b5f610235838361023d565b949350505050565b5f806001610249610254565b915091509250929050565b5f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166350d25bcd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102b1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102d591906103f5565b6102ff907f000000000000000000000000000000000000000000000000000000000000000061040c565b905090565b5f8060208385031215610315575f80fd5b823567ffffffffffffffff81111561032b575f80fd5b8301601f8101851361033b575f80fd5b803567ffffffffffffffff811115610351575f80fd5b856020828401011115610362575f80fd5b6020919091019590945092505050565b602081525f82518060208401525f5b8181101561039e5760208186018101516040868401015201610381565b505f604082850101526040601f19601f83011684010191505092915050565b600181811c908216806103d157607f821691505b6020821081036103ef57634e487b7160e01b5f52602260045260245ffd5b50919050565b5f60208284031215610405575f80fd5b5051919050565b5f8261042657634e487b7160e01b5f52601260045260245ffd5b50049056fea264697066735822122082ef7ae92edd9df8f10965ddfd8382fc675f4284a73f2ea704989b0ba4c0dfe564736f6c634300081a0033",
  "args_data": "0x00000000000000000000000000000000000000000000000000000000000000600000000000000000000000001940fed49cdbc397941f2d336eb4994d599e568b0000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000f5a726f4361756c64726f6e2f5553440000000000000000000000000000000000",
  "tx_hash": "0x00d033461f7b7115fba4fed4ee41c35e0b2e511b7070deaeefb6d2b00cb2c78c",
  "args": [
    "ZroCauldron/USD",
    "0x1940fEd49cDBC397941f2D336eb4994D599e568B",
    "18"
  ],
  "data": "0x60e060405234801561000f575f80fd5b5060405161098038038061098083398101604081905261002e91610163565b6001600160a01b0382166080525f61004684826102cc565b505f826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610084573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906100a89190610386565b90508060ff168260ff16116100d2576100c28160026103ba565b6100cd90600a6104c2565b6100fc565b6100dc81836104d0565b6100e78360026103ba565b6100f191906104d0565b6100fc90600a6104c2565b60a05260ff808216908316116101125780610114565b815b60ff1660c052506104e992505050565b634e487b7160e01b5f52604160045260245ffd5b80516001600160a01b038116811461014e575f80fd5b919050565b805160ff8116811461014e575f80fd5b5f805f60608486031215610175575f80fd5b83516001600160401b0381111561018a575f80fd5b8401601f8101861361019a575f80fd5b80516001600160401b038111156101b3576101b3610124565b604051601f8201601f19908116603f011681016001600160401b03811182821017156101e1576101e1610124565b6040528181528282016020018810156101f8575f80fd5b5f5b82811015610216576020818501810151838301820152016101fa565b505f6020838301015280955050505061023160208501610138565b915061023f60408501610153565b90509250925092565b600181811c9082168061025c57607f821691505b60208210810361027a57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156102c757805f5260205f20601f840160051c810160208510156102a55750805b601f840160051c820191505b818110156102c4575f81556001016102b1565b50505b505050565b81516001600160401b038111156102e5576102e5610124565b6102f9816102f38454610248565b84610280565b6020601f82116001811461032b575f83156103145750848201515b5f19600385901b1c1916600184901b1784556102c4565b5f84815260208120601f198516915b8281101561035a578785015182556020948501946001909201910161033a565b508482101561037757868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b5f60208284031215610396575f80fd5b61039f82610153565b9392505050565b634e487b7160e01b5f52601160045260245ffd5b60ff81811683821602908116908181146103d6576103d66103a6565b5092915050565b6001815b6001841115610418578085048111156103fc576103fc6103a6565b600184161561040a57908102905b60019390931c9280026103e1565b935093915050565b5f8261042e575060016104bc565b8161043a57505f6104bc565b8160018114610450576002811461045a57610476565b60019150506104bc565b60ff84111561046b5761046b6103a6565b50506001821b6104bc565b5060208310610133831016604e8410600b8410161715610499575081810a6104bc565b6104a55f1984846103dd565b805f19048211156104b8576104b86103a6565b0290505b92915050565b5f61039f60ff841683610420565b60ff82811682821603908111156104bc576104bc6103a6565b60805160a05160c05161046161051f5f395f60d201525f818161010b01526102db01525f8181608e015261025701526104615ff3fe608060405234801561000f575f80fd5b5060043610610085575f3560e01c8063d39bbef011610058578063d39bbef01461015b578063d568866c1461013b578063d6d7d5251461016e578063eeb8a8d31461016e575f80fd5b8063245a7bfc14610089578063313ce567146100cd578063c4f5183b14610106578063c699c4d61461013b575b5f80fd5b6100b07f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f47f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016100c4565b61012d7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016100c4565b61014e610149366004610304565b610198565b6040516100c49190610372565b61012d610169366004610304565b61022a565b61018161017c366004610304565b61023d565b6040805192151583526020830191909152016100c4565b60605f80546101a6906103bd565b80601f01602080910402602001604051908101604052809291908181526020018280546101d2906103bd565b801561021d5780601f106101f45761010080835404028352916020019161021d565b820191905f5260205f20905b81548152906001019060200180831161020057829003601f168201915b5050505050905092915050565b5f610235838361023d565b949350505050565b5f806001610249610254565b915091509250929050565b5f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166350d25bcd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102b1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102d591906103f5565b6102ff907f000000000000000000000000000000000000000000000000000000000000000061040c565b905090565b5f8060208385031215610315575f80fd5b823567ffffffffffffffff81111561032b575f80fd5b8301601f8101851361033b575f80fd5b803567ffffffffffffffff811115610351575f80fd5b856020828401011115610362575f80fd5b6020919091019590945092505050565b602081525f82518060208401525f5b8181101561039e5760208186018101516040868401015201610381565b505f604082850101526040601f19601f83011684010191505092915050565b600181811c908216806103d157607f821691505b6020821081036103ef57634e487b7160e01b5f52602260045260245ffd5b50919050565b5f60208284031215610405575f80fd5b5051919050565b5f8261042657634e487b7160e01b5f52601260045260245ffd5b50049056fea264697066735822122082ef7ae92edd9df8f10965ddfd8382fc675f4284a73f2ea704989b0ba4c0dfe564736f6c634300081a003300000000000000000000000000000000000000000000000000000000000000600000000000000000000000001940fed49cdbc397941f2d336eb4994d599e568b0000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000f5a726f4361756c64726f6e2f5553440000000000000000000000000000000000",
  "artifact_path": "InverseOracle.sol",
  "artifact_full_path": "InverseOracle.sol:InverseOracle",
  "standardJsonInput": {
    "language": "Solidity",
    "sources": {
      "src/oracles/InverseOracle.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.0;\n\nimport {IOracle} from \"/interfaces/IOracle.sol\";\nimport {IAggregator} from \"/interfaces/IAggregator.sol\";\n\n/// @title InverseOracle\n/// @notice An oracle that inverts the price of an aggregator\ncontract InverseOracle is IOracle {\n    IAggregator public immutable aggregator;\n    uint256 public immutable decimalScale;\n    uint8 public immutable decimals;\n    string private desc;\n\n    /// @notice Construct an oracle that inverts the price of an aggregator\n    /// @param _desc A description of the oracle\n    /// @param _aggregator The aggregator to invert\n    /// @param _upscaledTargetDecimals The number of decimals to return, 0 to use the aggregator's decimals\n    constructor(string memory _desc, IAggregator _aggregator, uint8 _upscaledTargetDecimals) {\n        aggregator = _aggregator;\n        desc = _desc;\n\n        uint8 aggregatorDecimals = _aggregator.decimals();\n\n        decimalScale = _upscaledTargetDecimals > aggregatorDecimals\n            ? 10 ** ((_upscaledTargetDecimals * 2) - (_upscaledTargetDecimals - aggregatorDecimals))\n            : 10 ** (aggregatorDecimals * 2);\n\n        decimals = _upscaledTargetDecimals > aggregatorDecimals ? _upscaledTargetDecimals : aggregatorDecimals;\n    }\n\n    function _get() internal view returns (uint256) {\n        return decimalScale / uint256(aggregator.latestAnswer());\n    }\n\n    // Get the latest exchange rate\n    /// @inheritdoc IOracle\n    function get(bytes calldata) public view override returns (bool, uint256) {\n        return (true, _get());\n    }\n\n    // Check the last exchange rate without any state changes\n    /// @inheritdoc IOracle\n    function peek(bytes calldata) public view override returns (bool, uint256) {\n        return (true, _get());\n    }\n\n    // Check the current spot exchange rate without any state changes\n    /// @inheritdoc IOracle\n    function peekSpot(bytes calldata data) external view override returns (uint256 rate) {\n        (, rate) = peek(data);\n    }\n\n    /// @inheritdoc IOracle\n    function name(bytes calldata) public view override returns (string memory) {\n        return desc;\n    }\n\n    /// @inheritdoc IOracle\n    function symbol(bytes calldata) public view override returns (string memory) {\n        return desc;\n    }\n}\n"
      },
      "src/interfaces/IOracle.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.0;\n\ninterface IOracle {\n    function decimals() external view returns (uint8);\n\n    function get(bytes calldata data) external returns (bool success, uint256 rate);\n\n    function peek(bytes calldata data) external view returns (bool success, uint256 rate);\n\n    function peekSpot(bytes calldata data) external view returns (uint256 rate);\n\n    function symbol(bytes calldata data) external view returns (string memory);\n\n    function name(bytes calldata data) external view returns (string memory);\n}\n"
      },
      "src/interfaces/IAggregator.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.0;\n\ninterface IAggregator {\n    function decimals() external view returns (uint8);\n\n    function latestAnswer() external view returns (int256 answer);\n\n    function latestRoundData()\n        external\n        view\n        returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n}\n\ninterface IAggregatorWithMeta is IAggregator {\n    function description() external view returns (string memory);\n\n    function version() external view returns (uint256);\n}\n"
      }
    },
    "settings": {
      "remappings": [
        "/=src/",
        "forge-std/=dependencies/forge-std-1.9.2/src/",
        "halmos-cheatcodes/=dependencies/halmos-cheatcodes-3ca0e11/src/",
        "@openzeppelin/contracts/=dependencies/openzeppelin-contracts-5.0.2/contracts/",
        "@openzeppelin/contracts-upgradeable/=dependencies/openzeppelin-contracts-upgradeable-5.0.2/contracts/",
        "@BoringSolidity/=dependencies/BoringSolidity-1.0.0/contracts/",
        "@solady/=dependencies/solady-0.0.231/src/",
        "@solmate/=dependencies/solmate-6.2.0/src/",
        "@excessivelySafeCall/=dependencies/ExcessivelySafeCall-0.0.1/src/",
        "@safe-contracts/=dependencies/safe-contracts-1.3.0/contracts/",
        "@fuzzlib/=dependencies/fuzzlib-0.0.1/src/",
        "@abracadabra-oftv2/=dependencies/abracadabra-oftv2-0.0.1/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 400
      },
      "metadata": {
        "useLiteralContent": false,
        "bytecodeHash": "ipfs",
        "appendCBOR": true
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ]
        }
      },
      "evmVersion": "shanghai",
      "viaIR": false,
      "libraries": {}
    }
  },
  "compiler": "0.8.26+commit.8a97fa7a"
}