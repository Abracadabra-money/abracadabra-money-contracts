{
  "address": "0x458aEbA4a8680a5D3240c810871413FeA77B1540",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_desc",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "_decimals",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "desc",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "get",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "peek",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "peekSpot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "setPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "LogPriceChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    }
  ],
  "bytecode": "0x60a060405234801561001057600080fd5b506040516108be3803806108be83398101604081905261002f916100bb565b600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600261007c8482610227565b5060019190915560ff16608052506102e6565b634e487b7160e01b600052604160045260246000fd5b805160ff811681146100b657600080fd5b919050565b6000806000606084860312156100d057600080fd5b83516001600160401b03808211156100e757600080fd5b818601915086601f8301126100fb57600080fd5b81518181111561010d5761010d61008f565b604051601f8201601f19908116603f011681019083821181831017156101355761013561008f565b8160405282815260209350898484870101111561015157600080fd5b600091505b828210156101735784820184015181830185015290830190610156565b60008484830101528097505050508086015193505050610195604085016100a5565b90509250925092565b600181811c908216806101b257607f821691505b6020821081036101d257634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561022257600081815260208120601f850160051c810160208610156101ff5750805b601f850160051c820191505b8181101561021e5782815560010161020b565b5050505b505050565b81516001600160401b038111156102405761024061008f565b6102548161024e845461019e565b846101d8565b602080601f83116001811461028957600084156102715750858301515b600019600386901b1c1916600185901b17855561021e565b600085815260208120601f198616915b828110156102b857888601518255948401946001909101908401610299565b50858210156102d65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6080516105be610300600039600060c301526105be6000f3fe608060405234801561001057600080fd5b50600436106100b95760003560e01c8063c699c4d611610081578063d6d7d5251161005b578063d6d7d5251461018e578063eeb8a8d31461018e578063f2fde38b146101b857600080fd5b8063c699c4d614610168578063d39bbef01461017b578063d568866c1461016857600080fd5b8063313ce567146100be57806355f150f1146100fc5780638da5cb5b1461011157806391b7f5ed1461013c578063a035b1fe14610151575b600080fd5b6100e57f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020015b60405180910390f35b6101046101cb565b6040516100f39190610445565b600054610124906001600160a01b031681565b6040516001600160a01b0390911681526020016100f3565b61014f61014a366004610493565b610259565b005b61015a60015481565b6040519081526020016100f3565b6101046101763660046104ac565b6102e2565b61015a6101893660046104ac565b610377565b6101a161019c3660046104ac565b61038b565b6040805192151583526020830191909152016100f3565b61014f6101c636600461051e565b6103a4565b600280546101d89061054e565b80601f01602080910402602001604051908101604052809291908181526020018280546102049061054e565b80156102515780601f1061022657610100808354040283529160200191610251565b820191906000526020600020905b81548152906001019060200180831161023457829003601f168201915b505050505081565b6000546001600160a01b031633146102a75760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b60018190556040518181527f693a60d4f4c0fd261f9652741abdbe7c0ff84599e0b9f1629c9a97e710082e449060200160405180910390a150565b6060600280546102f19061054e565b80601f016020809104026020016040519081016040528092919081815260200182805461031d9061054e565b801561036a5780601f1061033f5761010080835404028352916020019161036a565b820191906000526020600020905b81548152906001019060200180831161034d57829003601f168201915b5050505050905092915050565b6000610383838361038b565b949350505050565b600080600161039960015490565b915091509250929050565b6000546001600160a01b031633146103ed5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161029e565b6000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081178255604051909133917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a350565b600060208083528351808285015260005b8181101561047257858101830151858201604001528201610456565b506000604082860101526040601f19601f8301168501019250505092915050565b6000602082840312156104a557600080fd5b5035919050565b600080602083850312156104bf57600080fd5b823567ffffffffffffffff808211156104d757600080fd5b818501915085601f8301126104eb57600080fd5b8135818111156104fa57600080fd5b86602082850101111561050c57600080fd5b60209290920196919550909350505050565b60006020828403121561053057600080fd5b81356001600160a01b038116811461054757600080fd5b9392505050565b600181811c9082168061056257607f821691505b60208210810361058257634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220563fdf1e3f81ed032e03a1a9fbb3e6608e9dd4fbeab55a1de98c79c9cebf9a5d64736f6c63430008140033",
  "args_data": "0x00000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000de0b6b3a7640000000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000094d494d2f484f4e45590000000000000000000000000000000000000000000000",
  "tx_hash": "",
  "args": [],
  "data": "",
  "artifact_path": "FixedPriceOracle.sol",
  "artifact_full_path": "FixedPriceOracle.sol:FixedPriceOracle",
  "standardJsonInput": {
    "language": "Solidity",
    "sources": {
      "src/oracles/FixedPriceOracle.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.0;\n\nimport {Owned} from \"solmate/auth/Owned.sol\";\nimport {IOracle} from \"interfaces/IOracle.sol\";\n\ncontract FixedPriceOracle is IOracle, Owned {\n    event LogPriceChanged(uint256 price);\n\n    uint8 public immutable decimals;\n    uint256 public price;\n    string public desc;\n\n    constructor(string memory _desc, uint256 _price, uint8 _decimals) Owned(msg.sender) {\n        desc = _desc;\n        price = _price;\n        decimals = _decimals;\n    }\n\n    function setPrice(uint256 _price) public onlyOwner {\n        price = _price;\n        emit LogPriceChanged(_price);\n    }\n\n    function _get() internal view returns (uint256) {\n        return price;\n    }\n\n    /// @inheritdoc IOracle\n    function get(bytes calldata) public view override returns (bool, uint256) {\n        return (true, _get());\n    }\n\n    /// @inheritdoc IOracle\n    function peek(bytes calldata) public view override returns (bool, uint256) {\n        return (true, _get());\n    }\n\n    /// @inheritdoc IOracle\n    function peekSpot(bytes calldata data) external view override returns (uint256 rate) {\n        (, rate) = peek(data);\n    }\n\n    /// @inheritdoc IOracle\n    function name(bytes calldata) public view override returns (string memory) {\n        return desc;\n    }\n\n    /// @inheritdoc IOracle\n    function symbol(bytes calldata) public view override returns (string memory) {\n        return desc;\n    }\n}"
      },
      "lib/solmate/src/auth/Owned.sol": {
        "content": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity >=0.8.0;\n\n/// @notice Simple single owner authorization mixin.\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/auth/Owned.sol)\nabstract contract Owned {\n    /*//////////////////////////////////////////////////////////////\n                                 EVENTS\n    //////////////////////////////////////////////////////////////*/\n\n    event OwnershipTransferred(address indexed user, address indexed newOwner);\n\n    /*//////////////////////////////////////////////////////////////\n                            OWNERSHIP STORAGE\n    //////////////////////////////////////////////////////////////*/\n\n    address public owner;\n\n    modifier onlyOwner() virtual {\n        require(msg.sender == owner, \"UNAUTHORIZED\");\n\n        _;\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                               CONSTRUCTOR\n    //////////////////////////////////////////////////////////////*/\n\n    constructor(address _owner) {\n        owner = _owner;\n\n        emit OwnershipTransferred(address(0), _owner);\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                             OWNERSHIP LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        owner = newOwner;\n\n        emit OwnershipTransferred(msg.sender, newOwner);\n    }\n}\n"
      },
      "src/interfaces/IOracle.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.0;\n\ninterface IOracle {\n    function decimals() external view returns (uint8);\n\n    function get(bytes calldata data) external returns (bool success, uint256 rate);\n\n    function peek(bytes calldata data) external view returns (bool success, uint256 rate);\n\n    function peekSpot(bytes calldata data) external view returns (uint256 rate);\n\n    function symbol(bytes calldata data) external view returns (string memory);\n\n    function name(bytes calldata data) external view returns (string memory);\n}\n"
      }
    },
    "settings": {
      "remappings": [
        "/=src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        "BoringSolidity/=lib/BoringSolidity/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "solmate/=lib/solmate/src/",
        "utils/=utils/",
        "libraries/=src/libraries/",
        "interfaces/=src/interfaces/",
        "cauldrons/=src/cauldrons/",
        "staking/=src/staking/",
        "swappers/=src/swappers/",
        "oracles/=src/oracles/",
        "strategies/=src/strategies/",
        "tokens/=src/tokens/",
        "periphery/=src/periphery/",
        "mixins/=src/mixins/",
        "lenses/=src/lenses/",
        "surl/=lib/surl/src/",
        "solady/=lib/solady/src/",
        "forge-deploy/=lib/forge-deploy/contracts/",
        "ExcessivelySafeCall/=lib/ExcessivelySafeCall/src/",
        "safe-contracts/=lib/safe-contracts/contracts/",
        "fuzzlib/=lib/fuzzlib/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 400
      },
      "metadata": {
        "useLiteralContent": false,
        "bytecodeHash": "ipfs",
        "appendCBOR": true
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ]
        }
      },
      "evmVersion": "paris",
      "viaIR": false,
      "libraries": {}
    }
  }
}